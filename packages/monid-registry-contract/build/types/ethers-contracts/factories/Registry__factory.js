"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Registry__factory = void 0;
var contracts_1 = require("@ethersproject/contracts");
var Registry__factory = /** @class */ (function (_super) {
    __extends(Registry__factory, _super);
    function Registry__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    Registry__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    Registry__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    Registry__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Registry__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Registry__factory.connect = function (address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    };
    return Registry__factory;
}(contracts_1.ContractFactory));
exports.Registry__factory = Registry__factory;
var _abi = [
    {
        inputs: [],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: '_did',
                type: 'bytes32',
            },
            {
                internalType: 'string',
                name: '_newHash',
                type: 'string',
            },
        ],
        name: 'setRecord',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: '_did',
                type: 'bytes32',
            },
        ],
        name: 'getRecord',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string',
            },
        ],
        stateMutability: 'view',
        type: 'function',
        constant: true,
    },
];
var _bytecode = '0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105ea806100616000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063213681cd1461003b5780635ab5ee37146100e2575b600080fd5b6100676004803603602081101561005157600080fd5b8101908080359060200190929190505050610165565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a757808201518184015260208101905061008c565b50505050905090810190601f1680156100d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610163600480360360408110156100f857600080fd5b81019080803590602001909291908035906020019064010000000081111561011f57600080fd5b82018360208201111561013157600080fd5b8035906020019184600183028401116401000000008311171561015357600080fd5b909192939192939050505061021c565b005b60606000808381526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102105780601f106101e557610100808354040283529160200191610210565b820191906000526020600020905b8154815290600101906020018083116101f357829003601f168201915b50505050509050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660008085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c69642073656e64657200000000000000000000000000000000000081525060200191505060405180910390fd5b60606000808581526020019081526020016000206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b50505050509050600081511461041b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c6964206469642070726976617465206b657900000000000000000081525060200191505060405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525060008086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906104ff929190610509565b5090505050505050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261053f5760008555610586565b82601f1061055857805160ff1916838001178555610586565b82800160010185558215610586579182015b8281111561058557825182559160200191906001019061056a565b5b5090506105939190610597565b5090565b5b808211156105b0576000816000905550600101610598565b509056fea2646970667358221220fec76c63b8f1eab2ed3cbd093a8e94696b6eae84fcfb93d7065706707eec7f1764736f6c63430007050033';
